{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport moment from \"moment\";\nexport default {\n  props: {\n    shortcuts: {\n      type: Array,\n      \"default\": function _default() {\n        return [{\n          name: \"今日\",\n          ishow: true,\n          // range: [() => moment().startOf('day'), () => moment()],\n          range: [function () {\n            return moment().subtract(0, \"day\").startOf(\"day\");\n          }, function () {\n            return moment().subtract(0, \"day\").endOf(\"day\");\n          }]\n        }, {\n          name: \"昨日\",\n          ishow: true,\n          range: [function () {\n            return moment().subtract(1, \"day\").startOf(\"day\");\n          }, function () {\n            return moment().subtract(1, \"day\").endOf(\"day\");\n          }]\n        }, {\n          name: \"本周\",\n          ishow: true,\n          // range: [() => moment().startOf('isoWeek'), () => moment()],\n          range: [function () {\n            return moment().startOf(\"isoWeek\");\n          }, function () {\n            return moment().endOf(\"isoWeek\");\n          }]\n        }, {\n          name: \"本月\",\n          ishow: true,\n          // range: [() => moment().startOf('month'), () => moment()],\n          range: [function () {\n            return moment().startOf(\"month\");\n          }, function () {\n            return moment().endOf(\"month\");\n          }]\n        }, {\n          name: \"30天\",\n          ishow: true,\n          range: [function () {\n            return moment().subtract(30, \"day\");\n          }, function () {\n            return moment();\n          }]\n        }, {\n          name: \"上月\",\n          ishow: true,\n          range: [function () {\n            return moment().subtract(1, \"months\").startOf(\"month\");\n          }, function () {\n            return moment().subtract(1, \"months\").endOf(\"month\");\n          }]\n        }, {\n          name: \"60天\",\n          ishow: false,\n          //60天默认不显示，为\"金币记录\"新增需求。\n          range: [function () {\n            return moment().subtract(60, \"day\").startOf(\"day\");\n          }, function () {\n            return moment().endOf(\"day\");\n          }]\n        }];\n      }\n    },\n    value: \"\",\n    formatter: {\n      type: String,\n      \"default\": \"YYYY-MM-DD HH:mm:ss\"\n    },\n    isShowDefault: {\n      type: Boolean,\n      \"default\": true\n    },\n    showOtherDate: {\n      type: String,\n      \"default\": \"\"\n    }\n  },\n  watch: {\n    // 是否展示其他时间\n    showOtherDate: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal) {\n          this.shortcuts.forEach(function (item) {\n            if (item.name === newVal) {\n              item.ishow = true;\n            }\n          });\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    // 通过isShowDefault设置是否显示默认高亮兼容之前的模式\n    isShowDefault: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal) {\n          this.activeName = this.shortcuts[0].name;\n        } else {\n          this.setActive(\"\");\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  data: function data() {\n    return {\n      // activeName: this.defaultActive || this.shortcuts[0].name\n      activeName: this.defaultActive\n    };\n  },\n  created: function created() {\n    var _this = this;\n    if (this.activeName) {\n      var item = this.shortcuts.find(function (item) {\n        return item.name === _this.activeName;\n      });\n      if (item) {\n        this.updateModalValue(item.range[0](), item.range[1]());\n      }\n    }\n  },\n  computed: {\n    activeValue: {\n      set: function set(val) {\n        this.$emit(\"input\", val);\n      },\n      get: function get() {\n        return this.value;\n      }\n    }\n  },\n  methods: {\n    updateModalValue: function updateModalValue(start, end) {\n      if (this.activeName == \"30天\") {\n        this.activeValue = [start.format(this.formatter).substring(0, 10) + \" 00:00:00\", end.format(this.formatter).substring(0, 10) + \" 23:59:59\"];\n      } else {\n        this.activeValue = [start.format(this.formatter), end.format(this.formatter)];\n      }\n    },\n    handleClick: function handleClick(item) {\n      this.activeName = item.name;\n      this.updateModalValue(item.range[0](), item.range[1]());\n    },\n    setActive: function setActive(index) {\n      if (index === \"\") {\n        this.activeName = \"\";\n        return;\n      }\n      var active = this.shortcuts[index];\n      this.activeName = active.name;\n      this.updateModalValue(active.range[0](), active.range[1]());\n    }\n  }\n};","map":{"version":3,"names":["moment","props","shortcuts","type","Array","default","name","ishow","range","subtract","startOf","endOf","value","formatter","String","isShowDefault","Boolean","showOtherDate","watch","handler","newVal","oldVal","forEach","item","deep","immediate","activeName","setActive","data","defaultActive","created","_this","find","updateModalValue","computed","activeValue","set","val","$emit","get","methods","start","end","format","substring","handleClick","index","active"],"sources":["src/components/DateRangeShortcut/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"flex\">\r\n        <div v-for=\"o in shortcuts\" :key=\"o.name\" style=\"margin-right: 5px\">\r\n            <el-button :type=\"o.name === activeName ? 'warning' : 'primary'\" size=\"mini\" @click=\"handleClick(o)\" v-if=\"o.ishow\">\r\n                {{ o.name }}\r\n            </el-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nexport default {\r\n    props: {\r\n        shortcuts: {\r\n            type: Array,\r\n            default: () => [\r\n                {\r\n                    name: \"今日\",\r\n                    ishow: true,\r\n                    // range: [() => moment().startOf('day'), () => moment()],\r\n                    range: [\r\n                        () => moment().subtract(0, \"day\").startOf(\"day\"),\r\n                        () => moment().subtract(0, \"day\").endOf(\"day\"),\r\n                    ],\r\n                },\r\n                {\r\n                    name: \"昨日\",\r\n                    ishow: true,\r\n                    range: [\r\n                        () => moment().subtract(1, \"day\").startOf(\"day\"),\r\n                        () => moment().subtract(1, \"day\").endOf(\"day\"),\r\n                    ],\r\n                },\r\n                {\r\n                    name: \"本周\",\r\n                    ishow: true,\r\n                    // range: [() => moment().startOf('isoWeek'), () => moment()],\r\n                    range: [\r\n                        () => moment().startOf(\"isoWeek\"),\r\n                        () => moment().endOf(\"isoWeek\"),\r\n                    ],\r\n                },\r\n                {\r\n                    name: \"本月\",\r\n                    ishow: true,\r\n                    // range: [() => moment().startOf('month'), () => moment()],\r\n                    range: [\r\n                        () => moment().startOf(\"month\"),\r\n                        () => moment().endOf(\"month\"),\r\n                    ],\r\n                },\r\n                {\r\n                    name: \"30天\",\r\n                    ishow: true,\r\n                    range: [() => moment().subtract(30, \"day\"), () => moment()],\r\n                },\r\n                {\r\n                    name: \"上月\",\r\n                    ishow: true,\r\n                    range: [\r\n                        () => moment().subtract(1, \"months\").startOf(\"month\"),\r\n                        () => moment().subtract(1, \"months\").endOf(\"month\"),\r\n                    ],\r\n                },\r\n                {\r\n                    name: \"60天\",\r\n                    ishow: false, //60天默认不显示，为\"金币记录\"新增需求。\r\n                    range: [\r\n                        () => moment().subtract(60, \"day\").startOf(\"day\"),\r\n                        () => moment().endOf(\"day\"),\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        value: \"\",\r\n        formatter: {\r\n            type: String,\r\n            default: \"YYYY-MM-DD HH:mm:ss\",\r\n        },\r\n        isShowDefault: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        showOtherDate: {\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n    },\r\n    watch: {\r\n        // 是否展示其他时间\r\n        showOtherDate: {\r\n            handler(newVal, oldVal) {\r\n                if (newVal) {\r\n                    this.shortcuts.forEach((item) => {\r\n                        if (item.name === newVal) {\r\n                            item.ishow = true;\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n        // 通过isShowDefault设置是否显示默认高亮兼容之前的模式\r\n        isShowDefault: {\r\n            handler(newVal, oldVal) {\r\n                if (newVal) {\r\n                    this.activeName = this.shortcuts[0].name;\r\n                } else {\r\n                    this.setActive(\"\");\r\n                }\r\n            },\r\n            deep: true,\r\n            immediate: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            // activeName: this.defaultActive || this.shortcuts[0].name\r\n            activeName: this.defaultActive,\r\n        };\r\n    },\r\n    created() {\r\n        if (this.activeName) {\r\n            const item = this.shortcuts.find(\r\n                (item) => item.name === this.activeName\r\n            );\r\n            if (item) {\r\n                this.updateModalValue(item.range[0](), item.range[1]());\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        activeValue: {\r\n            set(val) {\r\n                this.$emit(\"input\", val);\r\n            },\r\n            get() {\r\n                return this.value;\r\n            },\r\n        },\r\n    },\r\n    methods: {\r\n        updateModalValue(start, end) {\r\n            if (this.activeName == \"30天\") {\r\n                this.activeValue = [\r\n                    start.format(this.formatter).substring(0, 10) + \" 00:00:00\",\r\n                    end.format(this.formatter).substring(0, 10) + \" 23:59:59\",\r\n                ];\r\n            } else {\r\n                this.activeValue = [\r\n                    start.format(this.formatter),\r\n                    end.format(this.formatter),\r\n                ];\r\n            }\r\n        },\r\n        handleClick(item) {\r\n            this.activeName = item.name;\r\n            this.updateModalValue(item.range[0](), item.range[1]());\r\n        },\r\n        setActive(index) {\r\n            if (index === \"\") {\r\n                this.activeName = \"\";\r\n                return;\r\n            }\r\n            const active = this.shortcuts[index];\r\n            this.activeName = active.name;\r\n            this.updateModalValue(active.range[0](), active.range[1]());\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.flex{\r\n    display: flex;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}